import numpy as np
import pandas as pd
import sys
import os
sys.path.insert(0, os.path.abspath(os.path.join(os.path.curdir, '..')))
from modeling.constant import * 

from sklearn.preprocessing import LabelEncoder

def get_file_name(file_path):
    return os.path.basename(file_path)

def encode_f1(f1: pd.DataFrame):
    def encode(x):
        try:
            return float(x[5:])
        except:
            return 0
    f1_selected = f1[f1_features]
    f1_selected['File'] = f1['File'].apply(get_file_name)
    f1_selected["PDF Header"] = f1_selected["PDF Header"].apply(encode)
    return f1_selected

def encode_f2(f2: pd.DataFrame):
    f2_selected = f2[f2_features]
    f2_rules = {}
    encoder = LabelEncoder()
    final_f2 = pd.DataFrame()
    final_f2['File'] = f2['File'].apply(get_file_name)
    for column in f2_selected.columns:
        final_f2[column] = encoder.fit_transform(f2_selected[column].astype(str))
        f2_rules[column] = extract_rule_from_encoder(encoder)
    
    return final_f2, f2_rules

def encode_f3(f3: pd.DataFrame):
    f3_selected = f3[f3_features]
    f3_selected['File'] = f3['File'].apply(get_file_name)
    return f3_selected

def extract_rule_from_encoder(encoder):
    encoding_rule = {label: index for index, label in enumerate(encoder.classes_)}
    return encoding_rule
